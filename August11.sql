/*
CREATING A SEQUENCE FOR OBJ ID
*/
DROP SEQUENCE obj_seq;
CREATE SEQUENCE obj_seq
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;
 
 select obj_seq.nextval from dual;
 
/*
CREATING A BASE TABLE TO HOLD MLLIONS OF ROWS
*/
 DROP TABLE obj_dtl;
 CREATE TABLE obj_dtl
 (
 obj_id NUMBER(10),
 obj_name VARCHAR2(1000),
 obj_typ VARCHAR2(1000),
 obj_status VARCHAR2(10),
 obj_created DATE);
 
 /*
 POPULATING THE BASE TABLE WITH MILLION OF ROWS
 */
 BEGIN
 FOR I IN 1..100
 LOOP
 INSERT INTO obj_dtl
 select obj_seq.nextval,object_name,object_type,status, created+I
 from dba_objects;
 END LOOP;
 END;
 
  
 /*
 CREATING AM INTERVAL RANGE PARTITIONED TABLE
 */
 CREATE TABLE obj_dtl_prt
 (
 obj_id NUMBER(10),
 obj_name VARCHAR2(1000),
 obj_typ VARCHAR2(1000),
 obj_status VARCHAR2(10),
 obj_created DATE)
 PARTITION BY RANGE(obj_created)
 INTERVAL(NUMTOYMINTERVAL(1, 'MONTH')) 
(  
   PARTITION OBJ_p1 VALUES LESS THAN (TO_DATE('1-APR-2017', 'DD-MON-YYYY'))
); 

/*
CREATING A TARGET TABLE TO HOLD DATA FOR FEW SPECIFIC DATES
*/
CREATE TABLE OBJ_DTL_TGT
AS SELECT * FROM OBJ_DTL WHERE 1=2;


select COUNT(*) from OBJ_DTL; --7260600
select COUNT(*) from OBJ_DTL_PRT; --7260600
select COUNT(*) from OBJ_DTL_TGT; --144958

 
 
CREATE OR REPLACE PROCEDURE PROC_DATALOAD1 AS 
BEGIN
  EXECUTE IMMEDIATE 'ALTER SESSION ENABLE PARALLEL DML';

/*
INSERTING DATA INTO THE PARTITIONED TABLE
*/
  INSERT /*+ APPEND PARALLEL(p) */ INTO OBJ_DTL_PRT p
  SELECT /*+ PARALLEL(o) */* from OBJ_DTL o;

  COMMIT;

/*
APPENDING DATA INTO THE TGT TABLE BY RUNNING THEM IN PARALLEL AND USING PARTITION PRUNING
*/
  INSERT /*+ APPEND*/ INTO OBJ_DTL_TGT p
  SELECT /*+ PARALLEL(r) */* from OBJ_DTL_PRT r WHERE TO_DATE(OBJ_CREATED,'DD-MON-YY') IN (TO_DATE('09-MAR-17','DD-MON-YY'),TO_DATE('09-MAY-17','DD-MON-YY'));

  COMMIT;
END PROC_DATALOAD1;
/

BEGIN
dbms_profiler.start_profiler('PROFILE2');
PROC_DATALOAD1;
dbms_profiler.stop_profiler;
END;
/ 
 